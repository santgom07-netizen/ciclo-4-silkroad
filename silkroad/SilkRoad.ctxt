#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Simulador\ de\ la\ Ruta\ de\ la\ Seda\ \r\n\ Clase\ principal\ que\ coordina\ todos\ los\ componentes\ del\ simulador.\r\n\ \r\n\ @author\ Santiago\ Andres\ Gomez\ Rojas\ y\ Miguel\ Angel\ Sandoval\r\n
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ b\u00E1sico.\r\n\ @param\ length\ Longitud\ de\ la\ ruta\ (debe\ ser\ positiva)\r\n\ @throws\ IllegalArgumentException\ si\ longitud\ <\=\ 0\r\n
comment10.params=type\ location
comment10.target=void\ placeRobot(java.lang.String,\ int)
comment10.text=\r\n\ Coloca\ un\ robot\ especificando\ tipo\ (Ciclo\ 4).\r\n\ @param\ type\ Tipo\:\ "normal",\ "neverback",\ "tender",\ "greedy"\r\n\ @param\ location\ Ubicaci\u00F3n\ del\ robot\r\n
comment11.params=location
comment11.target=void\ removeRobot(int)
comment11.text=\r\n\ Elimina\ un\ robot\ usando\ findRobot.\r\n\ @param\ location\ Ubicaci\u00F3n\ del\ robot\ a\ eliminar\r\n
comment12.params=location\ meters
comment12.target=void\ moveRobot(int,\ int)
comment12.text=\r\n\ Mueve\ un\ robot\ cierto\ n\u00FAmero\ de\ metros.\r\n\ @param\ location\ Ubicaci\u00F3n\ actual\ del\ robot\r\n\ @param\ meters\ Pasos\ a\ mover\ (puede\ ser\ negativo)\r\n
comment13.params=location
comment13.target=void\ moveRobot(int)
comment13.text=\r\n\ Mueve\ un\ robot\ de\ forma\ \u00F3ptima\ (Ciclo\ 2).\r\n\ @param\ location\ Ubicaci\u00F3n\ actual\ del\ robot\r\n
comment14.params=
comment14.target=void\ moveRobots()
comment14.text=\r\n\ Mueve\ todos\ los\ robots\ de\ forma\ \u00F3ptima\ (Ciclo\ 2).\r\n
comment15.params=robot
comment15.target=int\ calculateOptimalMove(Robot)
comment15.text=\r\n\ Calcula\ el\ mejor\ movimiento\ para\ un\ robot.\r\n\ @param\ robot\ Robot\ a\ mover.\ No\ debe\ ser\ null\r\n\ @return\ Metros\ a\ mover\ (0\ si\ no\ hay\ movimiento\ beneficioso)\r\n
comment16.params=
comment16.target=void\ resupplyStores()
comment16.text=\r\n\ Reabastece\ todas\ las\ tiendas\ a\ su\ cantidad\ inicial.\r\n
comment17.params=
comment17.target=void\ returnRobots()
comment17.text=\r\n\ Devuelve\ todos\ los\ robots\ a\ posici\u00F3n\ inicial.\r\n
comment18.params=
comment18.target=void\ reboot()
comment18.text=\r\n\ Reinicia\ el\ simulador\ (simula\ pasar\ un\ d\u00EDa).\r\n\ Reabastece\ tiendas\ y\ devuelve\ robots\ a\ posiciones\ iniciales.\r\n
comment19.params=
comment19.target=int\ profit()
comment19.text=\r\n\ Obtiene\ la\ ganancia\ m\u00E1xima\ posible.\r\n\ @return\ Ganancia\ actual\ m\u00E1s\ tenges\ disponibles\ en\ todas\ las\ tiendas\r\n
comment2.params=marathonInput
comment2.target=SilkRoad(java.lang.String)
comment2.text=\r\n\ Constructor\ que\ recibe\ entrada\ de\ marat\u00F3n.\r\n\ @param\ marathonInput\ String\ con\ datos\ de\ entrada\ en\ formato\ de\ marat\u00F3n\r\n\ @throws\ IllegalArgumentException\ si\ hay\ error\ al\ parsear\r\n
comment20.params=
comment20.target=int[][]\ stores()
comment20.text=\r\n\ Obtiene\ info\ de\ tiendas.\r\n\ @return\ Array\ int[][]\ donde\ cada\ fila\ es\ [ubicaci\u00F3n,\ tenges\ actual]\r\n
comment21.params=
comment21.target=int[][]\ robots()
comment21.text=\r\n\ Obtiene\ info\ de\ robots.\r\n\ @return\ Array\ int[][]\ donde\ cada\ fila\ es\ [ubicaci\u00F3n\ actual,\ ganancia\ total]\r\n
comment22.params=
comment22.target=int[][]\ emptiedStores()
comment22.text=\r\n\ Obtiene\ tiendas\ vaciadas\ (Ciclo\ 2).\r\n\ @return\ Array\ int[][]\ donde\ cada\ fila\ es\ [ubicaci\u00F3n\ tienda,\ veces\ que\ fue\ vaciada]\r\n
comment23.params=
comment23.target=int[][]\ profitPerMove()
comment23.text=\r\n\ Obtiene\ ganancias\ por\ movimiento\ (Ciclo\ 2).\r\n\ @return\ Array\ int[][]\ donde\ cada\ fila\ es\ un\ robot\ y\ cada\ columna\ es\ ganancia\ por\ movimiento\r\n
comment24.params=
comment24.target=int\ length()
comment24.text=\r\n\ Obtiene\ la\ longitud\ de\ la\ ruta.\r\n\ @return\ Longitud\ de\ la\ ruta\r\n
comment25.params=
comment25.target=boolean\ ok()
comment25.text=\r\n\ Indica\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa.\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa,\ false\ si\ fall\u00F3\r\n
comment26.params=
comment26.target=java.lang.String\ getLastError()
comment26.text=\r\n\ Obtiene\ el\ \u00FAltimo\ mensaje\ de\ error.\r\n\ @return\ Mensaje\ de\ error\ de\ la\ \u00FAltima\ operaci\u00F3n\ fallida\r\n
comment27.params=
comment27.target=void\ makeVisible()
comment27.text=\r\n\ Hace\ visible\ el\ simulador\ mostrando\ todos\ los\ elementos\ en\ el\ canvas.\r\n
comment28.params=
comment28.target=void\ makeInvisible()
comment28.text=\r\n\ Hace\ invisible\ el\ simulador\ ocultando\ todos\ los\ elementos.\r\n
comment29.params=
comment29.target=void\ finish()
comment29.text=\r\n\ Finaliza\ el\ simulador\ y\ cierra\ la\ ejecuci\u00F3n\ del\ programa.\r\n
comment3.params=days
comment3.target=SilkRoad(int[][])
comment3.text=\r\n\ Constructor\ que\ recibe\ configuraci\u00F3n\ de\ d\u00EDas.\r\n\ @param\ days\ Array\ bidimensional\ con\ configuraci\u00F3n\ de\ cada\ d\u00EDa\r\n\ @throws\ IllegalArgumentException\ si\ el\ formato\ es\ inv\u00E1lido\r\n
comment30.params=location
comment30.target=Robot\ findRobot(int)
comment30.text=\r\n\ Busca\ un\ robot\ por\ su\ ubicaci\u00F3n.\r\n\ @param\ location\ Ubicaci\u00F3n\ del\ robot\ buscado\r\n\ @return\ Robot\ encontrado\ o\ null\ si\ no\ existe\r\n
comment31.params=location
comment31.target=Store\ findStore(int)
comment31.text=\r\n\ Busca\ una\ tienda\ por\ su\ ubicaci\u00F3n.\r\n\ @param\ location\ Ubicaci\u00F3n\ de\ la\ tienda\ buscada\r\n\ @return\ Tienda\ encontrada\ o\ null\ si\ no\ existe\r\n
comment32.params=
comment32.target=void\ updateProgressBar()
comment32.text=\r\n\ Actualiza\ la\ barra\ de\ progreso\ con\ la\ ganancia\ actual\ y\ m\u00E1xima.\r\n
comment33.params=
comment33.target=void\ updateBlinkingRobot()
comment33.text=\r\n\ Hace\ parpadear\ el\ robot\ con\ mayor\ ganancia\ (Ciclo\ 2).\r\n
comment34.params=
comment34.target=void\ showErrorIfVisible()
comment34.text=\r\n\ Muestra\ mensaje\ de\ error\ si\ el\ simulador\ es\ visible.\r\n
comment4.params=length
comment4.target=void\ initializeSilkRoad(int)
comment4.text=\r\n\ Inicializa\ la\ ruta.\r\n\ @param\ length\ Longitud\ de\ la\ ruta\r\n
comment5.params=input
comment5.target=void\ parseMarathonInput(java.lang.String)
comment5.text=\r\n\ Parsea\ entrada\ de\ marat\u00F3n.\r\n\ @param\ input\ String\ en\ formato\ de\ marat\u00F3n\ (Ciclo\ 3)\r\n\ @throws\ IllegalArgumentException\ si\ hay\ error\ al\ parsear\r\n
comment6.params=location\ tenges
comment6.target=void\ placeStore(int,\ int)
comment6.text=\r\n\ Coloca\ una\ tienda\ (Ciclo\ 1\ -\ tienda\ normal\ por\ defecto).\r\n\ @param\ location\ Ubicaci\u00F3n\ (0\ <\=\ location\ <\ length)\r\n\ @param\ tenges\ Cantidad\ inicial\ (>\=\ 0)\r\n\ @throws\ IllegalArgumentException\ si\ ubicaci\u00F3n\ o\ tenges\ inv\u00E1lidos\r\n
comment7.params=type\ location\ tenges
comment7.target=void\ placeStore(java.lang.String,\ int,\ int)
comment7.text=\r\n\ Coloca\ una\ tienda\ especificando\ tipo\ (Ciclo\ 4).\r\n\ @param\ type\ Tipo\:\ "normal",\ "autonomous",\ "fighter",\ "generous"\r\n\ @param\ location\ Ubicaci\u00F3n\ en\ la\ ruta\r\n\ @param\ tenges\ Cantidad\ inicial\ de\ dinero\r\n\ @throws\ IllegalArgumentException\ si\ ubicaci\u00F3n\ o\ tenges\ inv\u00E1lidos\r\n
comment8.params=location
comment8.target=void\ removeStore(int)
comment8.text=\r\n\ Elimina\ una\ tienda.\r\n\ @param\ location\ Ubicaci\u00F3n\ de\ la\ tienda\ a\ eliminar\r\n
comment9.params=location
comment9.target=void\ placeRobot(int)
comment9.text=\r\n\ Coloca\ un\ robot\ (Ciclo\ 1\ -\ robot\ normal\ por\ defecto).\r\n\ @param\ location\ Ubicaci\u00F3n\ del\ robot\r\n
numComments=35
