#BlueJ class context
comment0.target=Store
comment0.text=\r\n\ Clase\ abstracta\ base\ para\ todas\ las\ tiendas\ en\ la\ Ruta\ de\ la\ Seda.\r\n\ Define\ comportamiento\ comun\ y\ permite\ extensibilidad\ mediante\ herencia.\r\n\ \r\n\ @author\ Santiago\ Andres\ Gomez\ Rojas\ y\ Miguel\ Angel\ Sandoval\r\n
comment1.params=location\ tenges\ color\ x\ y
comment1.target=Store(int,\ int,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ protegido\ para\ subclases.\r\n\ @param\ location\ Posicion\ en\ la\ ruta\ (0\ <\=\ location\ <\ length)\r\n\ @param\ tenges\ Cantidad\ inicial\ de\ dinero\ (>\=\ 0)\r\n\ @param\ color\ Color\ de\ la\ tienda\ para\ visualizacion\r\n\ @param\ x\ Coordenada\ X\ visual\ en\ pixels\r\n\ @param\ y\ Coordenada\ Y\ visual\ en\ pixels\r\n
comment10.params=
comment10.target=java.lang.String\ getColor()
comment10.text=\r\n\ Obtiene\ el\ color\ original\ asignado\ a\ la\ tienda.\r\n\ @return\ Color\ original\ de\ la\ tienda\r\n
comment11.params=
comment11.target=java.lang.String\ getType()
comment11.text=\r\n\ Obtiene\ el\ tipo\ de\ tienda\ como\ String.\r\n\ @return\ Tipo\ de\ tienda\ ("normal",\ "autonomous",\ "fighter",\ "generous",\ etc.)\r\n
comment12.params=
comment12.target=void\ makeVisible()
comment12.text=\r\n\ Hace\ visible\ la\ tienda\ en\ el\ canvas.\r\n
comment13.params=
comment13.target=void\ makeInvisible()
comment13.text=\r\n\ Hace\ invisible\ la\ tienda\ en\ el\ canvas.\r\n
comment2.params=
comment2.target=int\ getLocation()
comment2.text=\r\n\ Obtiene\ la\ ubicacion\ de\ la\ tienda\ en\ la\ ruta.\r\n\ @return\ Ubicacion\ (posicion\ en\ la\ ruta)\r\n
comment3.params=
comment3.target=int\ getTenges()
comment3.text=\r\n\ Obtiene\ el\ dinero\ actual\ disponible\ en\ la\ tienda.\r\n\ @return\ Cantidad\ de\ tenges\ disponibles\r\n
comment4.params=
comment4.target=int\ getInitialTenges()
comment4.text=\r\n\ Obtiene\ la\ cantidad\ inicial\ de\ dinero\ que\ tenia\ la\ tienda.\r\n\ @return\ Tenges\ iniciales\r\n
comment5.params=
comment5.target=int\ getTimesEmptied()
comment5.text=\r\n\ Obtiene\ el\ numero\ de\ veces\ que\ la\ tienda\ ha\ sido\ vaciada.\r\n\ @return\ Veces\ que\ la\ tienda\ fue\ vaciada\ completamente\r\n
comment6.params=robot
comment6.target=boolean\ canRobotTake(Robot)
comment6.text=\r\n\ Metodo\ abstracto\ que\ determina\ si\ un\ robot\ puede\ tomar\ dinero.\r\n\ Cada\ tipo\ de\ tienda\ implementa\ su\ propia\ logica\ de\ acceso.\r\n\ @param\ robot\ Robot\ que\ intenta\ tomar\ dinero\r\n\ @return\ true\ si\ el\ robot\ puede\ tomar\ dinero,\ false\ en\ caso\ contrario\r\n
comment7.params=amount\ robot
comment7.target=int\ takeTenges(int,\ Robot)
comment7.text=\r\n\ Toma\ dinero\ de\ la\ tienda\ cuando\ un\ robot\ la\ visita.\r\n\ Actualiza\ automaticamente\ el\ estado\ visual\ (color\ gris\ si\ se\ vac\u00EDa).\r\n\ @param\ amount\ Cantidad\ de\ dinero\ solicitado\r\n\ @param\ robot\ Robot\ que\ toma\ el\ dinero\r\n\ @return\ Cantidad\ realmente\ tomada\ (puede\ ser\ menor\ que\ lo\ solicitado)\r\n
comment8.params=
comment8.target=void\ resupply()
comment8.text=\r\n\ Reabastece\ la\ tienda\ a\ su\ cantidad\ inicial\ de\ dinero.\r\n\ Restaura\ el\ color\ original\ si\ la\ tienda\ estaba\ vacia.\r\n
comment9.params=
comment9.target=void\ reset()
comment9.text=\r\n\ Reinicia\ la\ tienda\ a\ su\ estado\ inicial.\r\n\ Reabastece\ dinero\ y\ reinicia\ contador\ de\ veces\ vaciada.\r\n
numComments=14
