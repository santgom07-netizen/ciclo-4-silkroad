#BlueJ class context
comment0.target=Robot
comment0.text=\r\n\ Clase\ abstracta\ base\ para\ todos\ los\ robots\ en\ la\ Ruta\ de\ la\ Seda.\r\n\ Define\ comportamiento\ comun\ y\ permite\ extensibilidad\ mediante\ herencia.\r\n\ \r\n\ @author\ Santiago\ Andres\ Gomez\ Rojas\ y\ Miguel\ Angel\ Sandoval\r\n
comment1.params=location\ color\ x\ y
comment1.target=Robot(int,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ protegido\ para\ subclases.\r\n\ @param\ location\ Posicion\ inicial\ del\ robot\ en\ la\ ruta\ (0\ <\=\ location\ <\ length)\r\n\ @param\ color\ Color\ del\ robot\ para\ visualizacion\r\n\ @param\ x\ Coordenada\ X\ visual\ en\ pixels\r\n\ @param\ y\ Coordenada\ Y\ visual\ en\ pixels\r\n
comment10.params=x\ y
comment10.target=void\ returnToInitialPosition(int,\ int)
comment10.text=\r\n\ Devuelve\ el\ robot\ a\ su\ posicion\ inicial.\r\n\ Solo\ funciona\ si\ canReturnToInitial()\ retorna\ true.\r\n\ @param\ x\ Coordenada\ X\ de\ la\ posicion\ inicial\ en\ pixels\r\n\ @param\ y\ Coordenada\ Y\ de\ la\ posicion\ inicial\ en\ pixels\r\n
comment11.params=
comment11.target=void\ reset()
comment11.text=\r\n\ Reinicia\ el\ robot\ a\ su\ estado\ inicial.\r\n\ Limpia\ el\ historial\ de\ ganancias\ y\ lo\ devuelve\ a\ posicion\ inicial.\r\n
comment12.params=times
comment12.target=void\ blink(int)
comment12.text=\r\n\ Hace\ que\ el\ robot\ parpadee\ para\ indicar\ maxima\ ganancia.\r\n\ El\ parpadeo\ ocurre\ en\ un\ thread\ separado.\r\n\ @param\ times\ Numero\ de\ veces\ que\ debe\ parpadear\ el\ robot\r\n
comment13.params=
comment13.target=java.lang.String\ getColor()
comment13.text=\r\n\ Obtiene\ el\ color\ actual\ del\ robot.\r\n\ @return\ Color\ del\ robot\r\n
comment14.params=color
comment14.target=void\ changeColor(java.lang.String)
comment14.text=\r\n\ Cambia\ el\ color\ del\ robot\ tanto\ logico\ como\ visualmente.\r\n\ @param\ color\ Nuevo\ color\ para\ el\ robot\r\n
comment15.params=
comment15.target=java.lang.String\ getType()
comment15.text=\r\n\ Obtiene\ el\ tipo\ del\ robot\ como\ String.\r\n\ @return\ Tipo\ del\ robot\ ("normal",\ "neverback",\ "tender",\ "greedy",\ etc.)\r\n
comment16.params=
comment16.target=void\ makeVisible()
comment16.text=\r\n\ Hace\ visible\ el\ robot\ en\ el\ canvas.\r\n
comment17.params=
comment17.target=void\ makeInvisible()
comment17.text=\r\n\ Hace\ invisible\ el\ robot\ en\ el\ canvas.\r\n
comment2.params=
comment2.target=int\ getLocation()
comment2.text=\r\n\ Obtiene\ la\ ubicacion\ actual\ del\ robot\ en\ la\ ruta.\r\n\ @return\ Ubicacion\ actual\ en\ la\ ruta\r\n
comment3.params=
comment3.target=int\ getInitialLocation()
comment3.text=\r\n\ Obtiene\ la\ ubicacion\ inicial\ del\ robot\ antes\ de\ cualquier\ movimiento.\r\n\ @return\ Ubicacion\ inicial\ en\ la\ ruta\r\n
comment4.params=
comment4.target=java.util.List\ getGainsHistory()
comment4.text=\r\n\ Obtiene\ el\ historial\ completo\ de\ ganancias\ del\ robot.\r\n\ Cada\ elemento\ representa\ la\ ganancia\ obtenida\ en\ cada\ movimiento.\r\n\ @return\ Lista\ con\ las\ ganancias\ por\ cada\ movimiento\ del\ robot\r\n
comment5.params=
comment5.target=int\ getTotalGain()
comment5.text=\r\n\ Obtiene\ la\ ganancia\ total\ acumulada\ por\ el\ robot.\r\n\ @return\ Ganancia\ total\ acumulada\ desde\ el\ inicio\ del\ simulador\r\n
comment6.params=store
comment6.target=int\ collectFromStore(Store)
comment6.text=\r\n\ Metodo\ abstracto\ que\ define\ como\ el\ robot\ recolecta\ dinero\ de\ una\ tienda.\r\n\ Cada\ tipo\ de\ robot\ implementa\ su\ propia\ estrategia\ de\ recoleccion.\r\n\ @param\ store\ Tienda\ de\ la\ que\ recolectar\ dinero.\ No\ debe\ ser\ null\r\n\ @return\ Cantidad\ de\ dinero\ recolectada\ por\ el\ robot\r\n
comment7.params=
comment7.target=boolean\ canReturnToInitial()
comment7.text=\r\n\ Metodo\ abstracto\ que\ indica\ si\ el\ robot\ puede\ volver\ a\ su\ posicion\ inicial.\r\n\ Cada\ tipo\ de\ robot\ define\ su\ propio\ comportamiento\ de\ retorno.\r\n\ @return\ true\ si\ el\ robot\ puede\ volver,\ false\ si\ no\ puede\ retornar\r\n
comment8.params=gain
comment8.target=void\ addGain(int)
comment8.text=\r\n\ Agrega\ una\ ganancia\ al\ historial\ del\ robot.\r\n\ @param\ gain\ Ganancia\ obtenida\ en\ el\ movimiento\ (>\=\ 0)\r\n
comment9.params=newLocation\ x\ y
comment9.target=void\ moveTo(int,\ int,\ int)
comment9.text=\r\n\ Mueve\ el\ robot\ a\ una\ nueva\ ubicacion\ en\ la\ ruta.\r\n\ Actualiza\ tanto\ la\ posicion\ logica\ como\ la\ representacion\ visual.\r\n\ @param\ newLocation\ Nueva\ posicion\ logica\ en\ la\ ruta\r\n\ @param\ x\ Nueva\ coordenada\ X\ para\ la\ visualizacion\ en\ pixels\r\n\ @param\ y\ Nueva\ coordenada\ Y\ para\ la\ visualizacion\ en\ pixels\r\n
numComments=18
